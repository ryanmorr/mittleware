/*! @ryanmorr/mittleware v0.1.0 | https://github.com/ryanmorr/mittleware */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).mittleware=e()}}(function(){return function f(i,u,d){function s(n,e){if(!u[n]){if(!i[n]){var t="function"==typeof require&&require;if(!e&&t)return t(n,!0);if(c)return c(n,!0);var r=new Error("Cannot find module '"+n+"'");throw r.code="MODULE_NOT_FOUND",r}var o=u[n]={exports:{}};i[n][0].call(o.exports,function(e){return s(i[n][1][e]||e)},o,o.exports,f,i,u,d)}return u[n].exports}for(var c="function"==typeof require&&require,e=0;e<d.length;e++)s(d[e]);return s}({1:[function(e,n,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){var i=[];return{use:function(e){return i.push(e),this},dispatch:function(f){return new Promise(function(t,r){if(i[0]){var o=0;i[o](f,function e(){var n=i[++o];n?n(f,e,t,r):t(f)},t,r)}else t(f)})}}},n.exports=t.default},{}]},{},[1])(1)});
//# sourceMappingURL=mittleware.min.js.map
